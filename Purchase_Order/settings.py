"""
Django settings for Purchase_Order project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path  # Import Path for handling filesystem paths

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # Project root directory


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mi73_1lav$r9d$mgk^#(-iwg^cayaw6qh3wwt=havpp5v*a80x'  # Secret key for cryptographic signing

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Enables debug mode (should be False in production)

ALLOWED_HOSTS = ['tabsinteg.onrender.com' ]#['lae\twl.com', '172.20.1.23']  # List of allowed host/domain names


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',            # Admin site
    'django.contrib.auth',             # Authentication framework
    'django.contrib.contenttypes',     # Content type framework
    'django.contrib.sessions',         # Session framework
    'django.contrib.messages',         # Messaging framework
    'django.contrib.staticfiles',      # Static files (CSS, JS, Images)
    'PO_Data.apps.PoDataConfig',       # Your custom app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',            # Security enhancements
    'django.contrib.sessions.middleware.SessionMiddleware',     # Session management
    'django.middleware.common.CommonMiddleware',                # Common HTTP features
    'django.middleware.csrf.CsrfViewMiddleware',                # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Authentication
    'django.contrib.messages.middleware.MessageMiddleware',     # Messaging
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   # Clickjacking protection
]

ROOT_URLCONF = 'Purchase_Order.urls'  # Root URL configuration

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Template engine
        'DIRS': [BASE_DIR / 'templates'],  # Custom template directory
        'APP_DIRS': True,                  # Look for templates in app directories
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',         # Adds request object to context
                'django.contrib.auth.context_processors.auth',        # Adds user object to context
                'django.contrib.messages.context_processors.messages',# Adds messages to context
            ],
        },
    },
]

WSGI_APPLICATION = 'Purchase_Order.wsgi.application'  # WSGI application entry point


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',      # Use MySQL as the database backend
        'NAME': 'purchase_order_db',               # Database name
        'USER': 'root',                            # Database user
        'PASSWORD': 'Kopilga@2025',                # Database password
        'HOST': "35.164.95.156",                       # Database host
        'PORT': "3306",                            # Database port
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # Checks similarity to user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',            # Enforces minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',           # Prevents common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',          # Prevents all-numeric passwords
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'  # Default language

TIME_ZONE = 'UTC'        # Default timezone

USE_I18N = True          # Enable Djangoâ€™s translation system

USE_TZ = True            # Enable timezone-aware datetimes

# Login settings (commented out)
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'   # URL to access static files
STATIC_ROOT = BASE_DIR / 'staticfiles'  # The absolute path to the directory where collectstatic will collect static files for deployment

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Default type for auto-generated primary keys
